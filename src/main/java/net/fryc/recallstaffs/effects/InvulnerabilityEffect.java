package net.fryc.recallstaffs.effects;

import net.fryc.recallstaffs.util.ServerPlayerGetters;
import net.minecraft.entity.LivingEntity;
import net.minecraft.entity.attribute.AttributeContainer;
import net.minecraft.entity.effect.StatusEffect;
import net.minecraft.entity.effect.StatusEffectCategory;
import net.minecraft.entity.effect.StatusEffectInstance;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.server.network.ServerPlayerEntity;
import net.minecraft.util.math.GlobalPos;
import org.jetbrains.annotations.Nullable;


public class InvulnerabilityEffect extends StatusEffect {

    private @Nullable LivingEntity entity;
    protected InvulnerabilityEffect(StatusEffectCategory category, int color) {
        super(category, color);
    }


    public void onRemoved(AttributeContainer attributes) {
        if(this.entity != null){
            if(entity instanceof ServerPlayerEntity sPlayer){
                GlobalPos pos = ((ServerPlayerGetters) sPlayer).getPositionBeforeUsingRecoveryAltar();
                if(pos != null && sPlayer.getServer() != null){
                    // teleporting player back to recovery altar
                    sPlayer.teleport(sPlayer.getServer().getWorld(pos.dimension()), pos.pos().getX(), pos.pos().getY(), pos.pos().getZ(), sPlayer.getYaw(), sPlayer.getPitch());

                    // setting recoverys altar position to null
                    ((ServerPlayerGetters) sPlayer).setPositionBeforeUsingRecoveryAltar(null);
                }
            }

            // removing invulnerability
            entity.setInvulnerable(false);
            entity.clearStatusEffects();
        }

        super.onRemoved(attributes);
    }

    public void onApplied(LivingEntity entity, int amplifier) {
        this.entity = entity;
        entity.addStatusEffect(new StatusEffectInstance(StatusEffects.FIRE_RESISTANCE, 1000000, 0, false, false, false));
        entity.addStatusEffect(new StatusEffectInstance(StatusEffects.RESISTANCE, 1000000, 98, false, false, false));
        entity.addStatusEffect(new StatusEffectInstance(StatusEffects.INVISIBILITY, 1000000, 0, false, false, false));
        entity.addStatusEffect(new StatusEffectInstance(StatusEffects.WEAKNESS, 1000000, 98, false, false, false));
        entity.addStatusEffect(new StatusEffectInstance(StatusEffects.WATER_BREATHING, 1000000, 0, false, false, false));
        entity.addStatusEffect(new StatusEffectInstance(StatusEffects.NIGHT_VISION, 1000000, 0, false, false, false));

        // making player invulnerable
        entity.setInvulnerable(true);

        super.onApplied(entity, amplifier);
    }

    public boolean canApplyUpdateEffect(int duration, int amplifier) {
        return true;
    }

    public boolean applyUpdateEffect(LivingEntity entity, int amplifier) {
        this.entity = entity;
        return super.applyUpdateEffect(entity, amplifier);
    }

}
